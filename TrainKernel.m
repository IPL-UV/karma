
function [Y2hat,results,model] = TrainKernel(K,K2,Y,Y2,D,p,gamma,e,C,regression)

if strcmpi(regression,'l2')

    H = K + gamma*eye(size(K));
    model = H\Y(p+1:end-D);
    Y2hat = K2*model; 
    
elseif strcmpi(regression,'eps')

  	% -----------------------------------------------------------------------------	
	% Training
	% -----------------------------------------------------------------------------
	H = K;	% Standard SVR
	model = svmtrain(Y(p+1:end-D),H,['-t 4 -s 3 -c ' num2str(C) ' -p ' num2str(e)]);
	
	% -----------------------------------------------------------------------------	
	% Testing
	% -----------------------------------------------------------------------------
	H2 = K2;	% Standard SVR
	[Y2hat,mse,dec] = svmpredict(Y2(p+1:end-D),H2,model);

elseif strcmpi(regression,'ehuber')
	
	% -----------------------------------------------------------------------------	
	% Training
	% -----------------------------------------------------------------------------
	H = K + gamma*eye(size(K));
	model = svmtrain(Y(p+1:end-D),H,['-t 4 -s 3 -c ' num2str(C) ' -p ' num2str(e)]);
	
	% -----------------------------------------------------------------------------	
	% Testing
	% -----------------------------------------------------------------------------
	H2 = K2;
	Y2hat = svmpredict(Y2(p+1:end-D),H2,model);

end;
	
% --------------------------------------------------------------------------------------------------------------------------
% Results in test
% --------------------------------------------------------------------------------------------------------------------------
results = ComputeResults(Y2hat,Y2(p+1:end-D));
